create IAM user and attache the following policies
1)AmazonEC2FullAccess 
2)AmazonRoute53FullAccess 
3)AmazonS3FullAccess 
4)IAMFullAccess 
5)AmazonVPCFullAccess 
6)AmazonSQSFullAccess 
7)AmazonEventBridgeFullAccess 

aws congigure

curl -LO https://github.com/kubernetes/kops/releases/download/$(curl -s https://api.github.com/repos/kubernetes/kops/releases/latest | grep tag_name | cut -d '"' -f 4)/kops-linux-amd64
chmod +x kops-linux-amd64
sudo mv kops-linux-amd64 /usr/local/bin/kops


curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
chmod +x ./kubectl
sudo mv ./kubectl /usr/bin/kubectl

aws s3 mb s3://dev1665 --region ap-south-1

Create private hosted zone in AWS Route53(kube.com)

export KOPS_CLUSTER_NAME=kube.com
export KOPS_STATE_STORE=s3://mybucketkube

# vim /root/.bashrc 
export KOPS_CLUSTER_NAME=kube.com
export KOPS_STATE_STORE=s3://mybucketkube



ssh-keygen

kube,kube123-->MY

kops create cluster \
--state=${KOPS_STATE_STORE} \
--node-count=1 \
--control-plane-size=t3.medium \
--node-size=t3.medium \
--zones=ap-south-1a,ap-south-1b \
--name=${KOPS_CLUSTER_NAME} \
--dns private \
--control-plane-count 1


kops delete cluster --name kube.com --yes

kops get cluster

kops update cluster --name jenkinstraining.com --yes --admin

kops validate cluster --wait 10m


ssh -i ~/.ssh/id_rsa ubuntu@api.jenkinstraining.com

kops delete cluster  --yes


nginx controller installation
kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.2.0/deploy/static/provider/aws/deploy.yaml
